version: "3.7"

networks:
  polls_net:

volumes:
  polls_vol:

services:

  db:
    image: postgres:11.3
    networks:
      - polls_net
    volumes:
      - polls_vol:/var/lib/postgres/data
    env_file:
      - deployment.env

  pgadmin:
    image: dpage/pgadmin4
    networks:
      - polls_net
    env_file:
      - pgadmin.env
    ports:
      - 8080:80

  app1:
    image: coding4startups/django-polls:nginx
    networks:
      - polls_net
    env_file:
      - deployment.env

  app2:
    image: coding4startups/django-polls:nginx
    networks:
      - polls_net
    env_file:
      - deployment.env

  app3:
    image: coding4startups/django-polls:nginx
    networks:
      - polls_net
    env_file:
      - deployment.env
    command: ["/bin/sh", "-c",
              "chmod +rw create-admin.sh &&
              chmod +rw wait-for-it.sh &&
              ./wait-for-it.sh db:5432 -s &&
              python manage.py migrate  &&
              ./create-admin.sh"]

  proxy:
    image: coding4startups/mynginx:latest
    networks:
      - polls_net
    ports:
      - "8000:8000"

#  init:
#    image: coding4startups/django-polls:nginx
#    networks:
#      - polls_net
#    env_file:
#      - deployment.env
##    command: ["/bin/sh", "-c",
##              "python manage.py migrate &&
##               chmod +x create-admin.sh &&
##               ./create-admin.sh"]
#    command: ["/bin/bash", "-c",
#             "chmod +rw create-admin.sh &&
#              chmod +rw wait-for-it.sh &&
#              ./wait-for-it.sh &&
#              db:5432 &&
#              python manage.py migrate &&
#              ./create-admin.sh"]
#    tty: true